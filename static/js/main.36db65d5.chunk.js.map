{"version":3,"sources":["components/Author.jsx","components/Statistics.jsx","components/Tweet.jsx","components/Post.jsx","assets/hubble.jpeg","assets/Nebula.jpeg","App.jsx","reportWebVitals.js","index.jsx"],"names":["Author","name","nickname","photo","className","src","alt","Statistics","Tweet","img","text","date","location","Post","author","tweet","tweetAuthor","UserPhoto","tweetContent","Image","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAaeA,EAVA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAC7B,OAAO,sBAAKC,UAAU,eAAf,UACK,qBAAKA,UAAU,aAAaC,IAAKF,EAAOG,IAAI,KAC5C,sBAAKF,UAAU,iBAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BH,IAC1B,mBAAGG,UAAU,gBAAb,SAA8BF,WCYnCK,G,MAjBI,WACf,OAAO,sBAAKH,UAAU,aAAf,UACK,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,UAAhB,oBACA,sBAAMA,UAAU,OAAhB,yBAEJ,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,UAAhB,iBACA,sBAAMA,UAAU,OAAhB,6BAEJ,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,UAAhB,oBACA,sBAAMA,UAAU,OAAhB,2BCELI,G,MAdD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAC7B,OAAO,sBAAKR,UAAU,kBAAf,UACK,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,aAAb,SAA2BM,IAC3B,qBAAKN,UAAU,QAAQC,IAAKI,EAAKH,IAAI,QAEzC,sBAAKF,UAAU,gBAAf,UACK,mBAAGA,UAAU,OAAb,SAAsBO,IACvB,0CACA,mBAAGP,UAAU,WAAb,SAA0BQ,YCI/BC,EAVF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACpB,OACI,sBAAKX,UAAU,OAAf,UACI,cAAC,EAAD,CAAQH,KAAMa,EAAOb,KAAMC,SAAUY,EAAOZ,SAAUC,MAAOW,EAAOX,QACpE,cAAC,EAAD,CAAOM,IAAKM,EAAMN,IAAKC,KAAMK,EAAML,KAAMC,KAAMI,EAAMJ,KAAMC,SAAUG,EAAMH,WAC3E,cAAC,EAAD,QCXG,MAA0B,oCCA1B,MAA0B,oCCMnCI,EAAc,CAClBf,KAAM,SACNC,SAAU,cACVC,MAAOc,GAGHC,EAAe,CACnBR,KAAK,+IAELD,IAAKU,EACLR,KAAM,4BACNC,SAAU,YAWGQ,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACA,cAAC,EAAD,CAAMU,OAAQE,EAAaD,MAAOG,OCXvBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36db65d5.chunk.js","sourcesContent":["import React from 'react';\nimport './Author.css';\n\nconst Author = ({name, nickname, photo}) => {\n    return <div className='tweet-header'>\n                <img className='user-photo' src={photo} alt='' />\n                <div className='name-container'>\n                    <p className='user-name'>{name}</p>\n                    <p className='user-nickname'>{nickname}</p>\n                </div>\n            </div>\n}\n\nexport default Author;","import React from 'react';\nimport './Statistics.css'\n\nconst Statistics = () => {\n    return <div className='statistics'>\n                <div className='stat-name'>\n                    <span className='numbers'>1,761 </span>\n                    <span className='text'>Retweets</span>\n                </div>\n                <div className='stat-name'>\n                    <span className='numbers'>99 </span>\n                    <span className='text'>Quote Tweets</span>\n                </div>\n                <div className='stat-name'>\n                    <span className='numbers'>14,7K </span>\n                    <span className='text'>Likes</span>\n                </div>\n            </div>\n};\n\nexport default Statistics;","import React from 'react';\nimport './Tweet.css'\n\nconst Tweet = ({img, text, date, location}) => {\n    return <div className='tweet-container'>\n                <div className='tweet-content'>\n                    <p className='tweet-text'>{text}</p>\n                    <img className='image' src={img} alt='' />\n                </div>\n                <div className='date-location'>\n                     <a className='date' >{date}</a>\n                    <span> · </span>\n                    <a className='location' >{location}</a>\n                </div>  \n            </div>\n}\n\nexport default Tweet;","import React from 'react';\nimport './Post.css';\nimport Author from './Author';\nimport Statistics from './Statistics';\nimport Tweet from './Tweet';\n\nconst Post = ({ author, tweet }) => {\n    return (\n        <div className='post'>\n            <Author name={author.name} nickname={author.nickname} photo={author.photo}/>\n            <Tweet img={tweet.img} text={tweet.text} date={tweet.date} location={tweet.location}/>\n            <Statistics/>\n        </div>\n    );\n};\n\nexport default Post;","export default __webpack_public_path__ + \"static/media/hubble.60bba08a.jpeg\";","export default __webpack_public_path__ + \"static/media/Nebula.ffaa3807.jpeg\";","import React from \"react\";\nimport './App.css';\nimport Post from \"./components/Post\";\nimport UserPhoto from './assets/hubble.jpeg';\nimport Image from './assets/Nebula.jpeg';\n\nconst tweetAuthor = {\n  name: 'Hubble',\n  nickname: \"@NASAHubble\",\n  photo: UserPhoto\n}\n\nconst tweetContent = {\n  text: `Feast your eyes on the stunning Orion Nebula. \nIs it just us, or does it look like a space turkey? #HappyThanksgiving from the Hubble team!`,\n  img: Image,\n  date: '5:00 PM · Nov 25, 2021',\n  location: 'Sprinklr'\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Post author={tweetAuthor} tweet={tweetContent}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}